#!/bin/bash

die()
{
	local _ret="${2:-1}"
	test "${_PRINT_HELP:-no}" = yes && print_help >&2
	echo "$1" >&2
	exit "${_ret}"
}


begins_with_short_option()
{
	local first_option all_short_options='pah'
	first_option="${1:0:1}"
	test "$all_short_options" = "${all_short_options/$first_option/}" && return 1 || return 0
}

# THE DEFAULTS INITIALIZATION - POSITIONALS
_positionals=()
# THE DEFAULTS INITIALIZATION - OPTIONALS
_arg_port="443"
_arg_alias="<host>"


print_help()
{
	printf '%s\n' "SSL certificate install into java keystore. (v0.1)"
	printf 'Usage: %s [-p|--port <arg>] [-a|--alias <arg>] [-h|--help] <host>\n' "$0"
	printf '\t%s\n' "<host>: without https:// and port, eg. google.com"
	printf '\t%s\n' "-p, --port: port (default: '443')"
	printf '\t%s\n' "-a, --alias: alias in keystore (default: <host>"
	printf '\t%s\n' "-h, --help: Prints help"
}


parse_commandline()
{
	_positionals_count=0
	while test $# -gt 0
	do
		_key="$1"
		case "$_key" in
			-p|--port)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_port="$2"
				shift
				;;
			--port=*)
				_arg_port="${_key##--port=}"
				;;
			-p*)
				_arg_port="${_key##-p}"
				;;
			-a|--alias)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_alias="$2"
				shift
				;;
			--alias=*)
				_arg_alias="${_key##--alias=}"
				;;
			-a*)
				_arg_alias="${_key##-a}"
				;;
			-h|--help)
				print_help
				exit 0
				;;
			-h*)
				print_help
				exit 0
				;;
			*)
				_last_positional="$1"
				_positionals+=("$_last_positional")
				_positionals_count=$((_positionals_count + 1))
				;;
		esac
		shift
	done
}


handle_passed_args_count()
{
	local _required_args_string="'host'"
	test "${_positionals_count}" -ge 1 || _PRINT_HELP=yes die "FATAL ERROR: Not enough positional arguments - we require exactly 1 (namely: $_required_args_string), but got only ${_positionals_count}." 1
	test "${_positionals_count}" -le 1 || _PRINT_HELP=yes die "FATAL ERROR: There were spurious positional arguments --- we expect exactly 1 (namely: $_required_args_string), but got ${_positionals_count} (the last one was: '${_last_positional}')." 1
}


assign_positional_args()
{
	local _positional_name _shift_for=$1
	_positional_names="_arg_host "

	shift "$_shift_for"
	for _positional_name in ${_positional_names}
	do
		test $# -gt 0 || break
		eval "$_positional_name=\${1}" || die "Error during argument parsing, possibly an Argbash bug." 1
		shift
	done
}

parse_commandline "$@"
handle_passed_args_count
assign_positional_args 1 "${_positionals[@]}"

# OTHER STUFF GENERATED BY Argbash

### END OF CODE GENERATED BY Argbash (sortof) ### ])
# [ <-- needed because of Argbash

if [[ "$_arg_alias" == "<host>" ]]; then
    _arg_alias="$_arg_host"
fi
echo "Installing cert for $(java --version)"
echo "keytool: $JAVA_HOME/bin/keytool "
"$JAVA_HOME/bin/keytool" -delete -noprompt -alias $_arg_alias -keypass changeit -storepass changeit 2>/dev/null
echo | openssl s_client -connect "$_arg_host:$_arg_port"  2>/dev/null | openssl x509 > $_arg_alias.pem
"$JAVA_HOME/bin/keytool" -importcert -cacerts -noprompt -alias $_arg_alias -file $_arg_alias.pem -keypass changeit -storepass changeit

# ] <-- needed because of Argbash
